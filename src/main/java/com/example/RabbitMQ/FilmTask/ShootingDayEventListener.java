package com.example.RabbitMQ.FilmTask;

import com.example.Entity.Actors;
import com.example.RabbitMQ.DtoRabbitMQ.DtoShootingDayMQ;
import com.example.Repository.ActorRepo;
import com.example.Service.ActorsService;
import com.example.Service.SenderService;
import org.springframework.amqp.rabbit.annotation.RabbitListener;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class ShootingDayEventListener {

    @Autowired
    private ActorRepo actorsRepository; // —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è –∞–∫—Ç–µ—Ä–æ–≤

    @Autowired
    private ActorsService actorService;
    @Autowired
    private SenderService emailService; // —Å–µ—Ä–≤–∏—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ email

    @RabbitListener(queues = "shootingDayQueue")
    public void handleShootingDayEvent(DtoShootingDayMQ event) {
        System.out.println("üîî –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ ShootingDay: " + event);
        Long filmId = event.getFilmId();
        List<Actors> actors = actorService.getActorsByMovieId(filmId);

        System.out.println("üí• –ê–∫—Ç—ë—Ä–æ–≤ –Ω–∞ —Ñ–∏–ª—å–º–µ " + filmId + ": " + actors.size());
        try {
        for (Actors actor : actors) {
            String email   = actor.getUser().getGmail();
            System.out.println("‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ –Ω–∞: " + email);
            String subject = "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—ä—ë–º–æ—á–Ω–æ–º –¥–Ω–µ";
            String message = String.format(
                    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, %s!%n" +
                            "–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ %s –≤ %s –≤—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Å—ä—ë–º–∫–∞—Ö —Ñ–∏–ª—å–º–∞.%n" +
                            "–õ–æ–∫–∞—Ü–∏—è: %s%n%n" +
                            "–°–ø–∞—Å–∏–±–æ!",
                    actor.getName(),
                    event.getShootingDate(),
                    event.getShootingTime(),
                    event.getLocation()
            );


            emailService.sendEmail(email, subject, message);
        }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}


