spring.application.name=OOPKursova

#BD
spring.datasource.url=${URL_DATABASE}
spring.datasource.username=${User_BD}
spring.datasource.password=${BD_Password}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Elastic
spring.elasticsearch.uris=${Elastic_url}
spring.elasticsearch.username=${Elastic_Username}
spring.elasticsearch.password=${Elastic_Password}
spring.elasticsearch.connection-timeout=10s
spring.mustache.servlet.expose-request-attributes=true

#Gmail
spring.mail.username=${Gmail_username}
spring.mail.password=${MY_PASSWORD_GMAIL}
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com


server.port=8080

testing.app.secret=${JWT_SECRET_CODE}
testing.app.lifetime=60000000
spring.main.allow-bean-definition-overriding=true

google.cloud.storage.bucket.name=${Bucket1}
google.cloud.storage.bucket.name1=${Bucket2}
logging.level.org.springframework.security=DEBUG
GOOGLE_APPLICATION_CREDENTIALS=${PasswordBucket}

spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
server.tomcat.max-swallow-size=-1


spring.security.oauth2.client.registration.google.client-id=${client-id}
spring.security.oauth2.client.registration.google.client-secret=${client-secret}
spring.security.oauth2.client.registration.google.scope=openid,profile,email



spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub
